name: Update OpenAPI Specification

on:
  schedule:
    # Run daily at 2 AM UTC to check for updates
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update-openapi-spec:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: uv sync
    
    - name: Check current OpenAPI spec info
      id: current-spec
      run: |
        if [ -f "resources/openapi-spec.json" ]; then
          CURRENT_VERSION=$(jq -r '.info.version // "unknown"' resources/openapi-spec.json)
          CURRENT_PATHS=$(jq '.paths | length' resources/openapi-spec.json)
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "current-paths=$CURRENT_PATHS" >> $GITHUB_OUTPUT
          echo "Current spec version: $CURRENT_VERSION, paths: $CURRENT_PATHS"
        else
          echo "current-version=none" >> $GITHUB_OUTPUT
          echo "current-paths=0" >> $GITHUB_OUTPUT
          echo "No existing OpenAPI spec found"
        fi
    
    - name: Update OpenAPI specification
      id: update-spec
      run: |
        echo "Updating OpenAPI specification..."
        uv run python scripts/update_openapi_spec.py
        
        # Check if files were changed
        if git diff --quiet resources/openapi-spec.json; then
          echo "has-changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected in OpenAPI specification"
        else
          echo "has-changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected in OpenAPI specification"
          
          # Get new spec info
          NEW_VERSION=$(jq -r '.info.version // "unknown"' resources/openapi-spec.json)
          NEW_PATHS=$(jq '.paths | length' resources/openapi-spec.json)
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new-paths=$NEW_PATHS" >> $GITHUB_OUTPUT
          echo "New spec version: $NEW_VERSION, paths: $NEW_PATHS"
        fi
    
    - name: Create Pull Request
      if: steps.update-spec.outputs.has-changes == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          chore: update OpenAPI specification
          
          - Updated from Authlete docs (https://docs.authlete.com/en/shared/3.0.0/spec)
          - Version: ${{ steps.current-spec.outputs.current-version }} → ${{ steps.update-spec.outputs.new-version }}
          - Paths: ${{ steps.current-spec.outputs.current-paths }} → ${{ steps.update-spec.outputs.new-paths }}
          
          Auto-generated by update-openapi-spec workflow
        branch: update-openapi-spec-${{ github.run_number }}
        delete-branch: true
        title: 'chore: update OpenAPI specification to v${{ steps.update-spec.outputs.new-version }}'
        body: |
          ## OpenAPI Specification Update
          
          This PR updates the OpenAPI specification from the latest Authlete documentation.
          
          **Changes:**
          - **Version:** `${{ steps.current-spec.outputs.current-version }}` → `${{ steps.update-spec.outputs.new-version }}`
          - **API Endpoints:** `${{ steps.current-spec.outputs.current-paths }}` → `${{ steps.update-spec.outputs.new-paths }}`
          - **Source:** https://docs.authlete.com/en/shared/3.0.0/spec
          
          **Files Updated:**
          - `resources/openapi-spec.json`
          
          **Verification:**
          - [ ] OpenAPI spec is valid JSON
          - [ ] Spec contains expected Authlete API endpoints
          - [ ] No breaking changes in existing endpoint definitions
          
          ---
          
          🤖 This PR was automatically created by the `update-openapi-spec` GitHub Action.
          
          **Review Guidelines:**
          1. Verify the changes are legitimate updates from Authlete
          2. Check that no critical API definitions have been removed
          3. Ensure the new version is correctly parsed
          4. Consider updating any dependent code or documentation
        labels: |
          dependencies
          automation
          documentation
        reviewers: |
          watahani
    
    - name: Summary
      run: |
        if [ "${{ steps.update-spec.outputs.has-changes }}" == "true" ]; then
          echo "✅ OpenAPI spec updated and PR created successfully"
          echo "📊 Version: ${{ steps.current-spec.outputs.current-version }} → ${{ steps.update-spec.outputs.new-version }}"
          echo "🔧 Paths: ${{ steps.current-spec.outputs.current-paths }} → ${{ steps.update-spec.outputs.new-paths }}"
        else
          echo "ℹ️ OpenAPI spec is already up to date"
        fi